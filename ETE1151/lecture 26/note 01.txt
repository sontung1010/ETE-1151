=============
Class is used to hold several attributes (varibles).
The class also holds functions, you can think them as member functions

========
Basic concepts of object oriented programming

blue print to make a car 		define class
car object 				instantiate class to create an object 

Define a programming unit called a class to house attributes and methods (member function to perform class tasks)

The example just covered earlier 
the attributes were x and y 
the methods or member functions were set_x_y() and print()

bank account class 
attribute: balance 
methods: deposit money, debit_money, get_balance

car class 
attributes: color, number of doors, amount gas in the tank, current speed, total_miles_driven
methods: accelerate_car, brake, etc.

You must create an object of a class to perform the tasks the class describes 

Can create many objects from the same blueprint

joes_bank_account, Marys_bank_account

Johns_car, James_car 

Each car object has its own associated attributes. Johns_car may be red, James_car maybe white. Each objects knows its attributes not other object's 
attributes

We have to define member functions and data members that belongs to the class 

The class definition begins with word clas followed by class name.
By convention, the name of class begins with a capital letter and each subsequent word begins with a capital letter 

Every class's body is enclosed in a pair of left and right braces 

========
used public: to specify public members (functions are available to te public, i.e. can be called in main or client code)

Public member functions will be used by clients of class to manipulate class 's data. Allows client code interact with an object of the class 

========
use private: to specify private members. Can access only through member functions

We did not try the following in the previous example
we could not do the following: 
cout << p1.x; 		// x is private and cannot be accessed in main()

Declaring data members with access specifer private is known as data hiding. The data representation used within the class is of no concern to class's
clients, thus we make them private. This is called information hiding.

Encapsultating data members and member functions within an object gives the member functions the right to access the data members.

Member functions often have no arguments, example print(), or fewer arguments than typical functions calls in non-object oriented languages.

Each element of a class should be private unless it can be proven that elements needs to be public. This is another example of principle of least privilege

The member function with same name is called a constructor.
in our example member function set_x_y is not a constructor because its name is not Point (i.e. is not the class name)

So we could have had a function called Point such as below
Point (double xx, double yy) {
	x = xx;
	y = yy;
}

A constructor is a special member function that initializes the data members of a class object. You can have several constructors. As another example
Point() {
	x = 0.0;
	y = 0.0;
}

This constructor has no argument. Having multiple constructors is allowed and C++ can differentiate between the two because each function has a 
different signature 
Again remember when we talked about overloading, i.e. the same function name can be used multiple times as long as each function has a different argument
list or different types.

A deconstructor is another type of special member function. The name of the deconstructor for is the tilda character (~) followed by class name.

~Point() {
}

Object's deconstructor automatically called when the object is destroyed. 
It does not release object's memory it performs termination housekeeping before the object's memory is reclaimed. As the memory may be used to hold new
objects. There is only one deconstructor and cannot overload it. 

To define member functions outside class we use scope resolution operator :: 

=====






















